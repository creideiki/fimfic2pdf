#!/usr/bin/env ruby
# frozen_string_literal: true

require 'logger'
require 'optparse'

require 'fimfic2pdf/downloader'
require 'fimfic2pdf/renderer'
require 'fimfic2pdf/transformer'
require 'fimfic2pdf/version'

logger = Logger.new($stderr, progname: 'Driver')

parser = OptionParser.new
options = { toc: true }

parser.banner = 'Usage: fimfic2pdf -i ID [options]

Saves files in a working directory named ./<ID>/.

When run multiple times:
* By default, only re-renders the PDF, including any manual changes to the LaTeX code.
* To re-parse the HTML and re-transform to LaTeX, losing any manual changes, use the "-t" flag.
* To re-download the EPUB file and start over, remove the ./<ID>/ directory.

By default, produces a single PDF with all chapters. For splitting into mutiple volumes,
give the range of chapters for each volume, e.g.:
   --volumes 1-10,11-20
yields two volumes, containing chapters 1-10 and 11-20, respectively.
Each chapter must be used in exactly one volume.
To change the volume split, "-t" must be specified, which loses any manual changes.

Section breaks (represented as a horizontal line in EPUB and lines
with asterisks on the web) have a few different renderings.
To choose a style, use:
   --hr-style [asterism,fleuron,scrollwork]
where "asterism" is the default.

Asterism is three asterisks in a triangle.

Fleuron (centered, roughly square symbol) and scrollwork (horizontally
extended line with flourishes) take a number specifying which symbol
to use. See the "pgfornament" documentation at
https://ctan.org/pkg/pgfornament for the complete list. 80-89 are
recommended for scrollwork and the rest for fleurons. The default is a
horse for fleurons (symbol 108) and a line with a center embellishment
for scrollwork (symbol 82).

Underlined text cannot be automatically broken into lines. A list of
chapters containing underlined text will be printed, so it can be
checked manually for overruns. To break a line of underlined text, end
and then restart the \fancyuline{} environment. E.g. change:
   \fancyuline{This is a long line that should be broken.}
into
   \fancyuline{This is a long line} \fancyuline{that should be broken.}
Then re-run the program without specifying "-t"/"--retransform" to
re-render the changed LaTeX code.
'
parser.separator ''

# rubocop:disable Layout/LineLength
parser.on('-i ID', '--id ID', 'story ID', Integer) { |id| options[:id] = id }
parser.on('-v CHAPTERS,CHAPTERS', '--volumes CHAPTERS,CHAPTERS', 'split story into multiple volumes', Array) { |volumes| options[:volumes] = volumes }
parser.on('-t', '--retransform', 'force re-parsing of the HTML and transforming to LaTeX') { |f| options[:force_retransform] = f }
parser.on('-s', '--hr-style STYLE', [:asterism, :fleuron, :scrollwork], 'style of <hr> section breaks, asterism (default), fleuron, or scrollwork') { |s| options[:hr_style] = s }
parser.on('-y', '--hr-symbol SYMBOL', Integer, 'symbol number for scrollwork or fleuron') { |y| options[:hr_symbol] = y }
parser.on('-c', '--no-chapter', 'disable "Chapter X" in chapter titles') { options[:chapter_style] = :no_chapter }
parser.on('-o', '--no-toc', 'disable table of contents') { options[:toc] = false }
# rubocop:enable Layout/LineLength

parser.on_tail
parser.on_tail('-V', '--version', 'display version information') do
  puts "FimFic2PDF #{FimFic2PDF::VERSION}"
  exit 0
end
parser.on_tail('-h', '--help', 'display usage information') { abort parser.to_s }

begin
  parser.parse! ARGV
rescue OptionParser::ParseError => e
  if e.args.empty?
    abort parser.to_s
  else
    abort "#{e}\n\n#{parser}"
  end
end

unless options.include? :id
  puts 'No story ID specified.'
  puts ''
  abort parser.to_s
end

options[:hr_style] = :asterism unless options.include? :hr_style
unless options.include? :hr_symbol
  options[:hr_symbol] = 82  if options[:hr_style] == :scrollwork
  options[:hr_symbol] = 108 if options[:hr_style] == :fleuron
end

if File.directory? options[:id].to_s
  logger.info "Working directory #{options[:id]} already exists, not downloading EPUB"
else
  downloader = FimFic2PDF::Downloader.new options[:id]
  downloader.fetch
  downloader.unpack
  downloader.write_config
  options[:transform] = true
end

chapters_with_underline = []

if options[:force_retransform] or options[:transform]
  logger.info 'Forcing reparse and retransform from HTML to LaTeX due to "-t" flag' if options[:force_retransform]
  transformer = FimFic2PDF::Transformer.new(options)
  transformer.validate_volumes
  transformer.parse_metadata
  chapters_with_underline = transformer.transform
  transformer.write_story
  transformer.write_config
else
  logger.info 'Not transforming, using existing LaTeX code'
end

renderer = FimFic2PDF::Renderer.new options[:id]
renderer.render_story

unless chapters_with_underline.empty?
  logger.warn 'Underlines present in the following chapters. Please check line breaks manually.'
  chapters_with_underline.each { |c| logger.warn c }
end
